Resources:
  kthvpc225CE33B:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: AwsStack/kth-vpc
    Metadata:
      aws:cdk:path: AwsStack/kth-vpc/Resource
  kthvpcPublicSubnet1Subnet22E2288F:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: kthvpc225CE33B
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: AwsStack/kth-vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: AwsStack/kth-vpc/PublicSubnet1/Subnet
  kthvpcPublicSubnet1RouteTable32AC9AEC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: kthvpc225CE33B
      Tags:
        - Key: Name
          Value: AwsStack/kth-vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: AwsStack/kth-vpc/PublicSubnet1/RouteTable
  kthvpcPublicSubnet1RouteTableAssociation4D2ED321:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: kthvpcPublicSubnet1RouteTable32AC9AEC
      SubnetId:
        Ref: kthvpcPublicSubnet1Subnet22E2288F
    Metadata:
      aws:cdk:path: AwsStack/kth-vpc/PublicSubnet1/RouteTableAssociation
  kthvpcPublicSubnet1DefaultRouteDF5137AC:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: kthvpcPublicSubnet1RouteTable32AC9AEC
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: kthvpcIGW6AC1392C
    DependsOn:
      - kthvpcVPCGWECD83EE3
    Metadata:
      aws:cdk:path: AwsStack/kth-vpc/PublicSubnet1/DefaultRoute
  kthvpcPublicSubnet1EIP3934E74F:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: AwsStack/kth-vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: AwsStack/kth-vpc/PublicSubnet1/EIP
  kthvpcPublicSubnet1NATGatewayD432435C:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - kthvpcPublicSubnet1EIP3934E74F
          - AllocationId
      SubnetId:
        Ref: kthvpcPublicSubnet1Subnet22E2288F
      Tags:
        - Key: Name
          Value: AwsStack/kth-vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: AwsStack/kth-vpc/PublicSubnet1/NATGateway
  kthvpcPublicSubnet2Subnet53A3C282:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: kthvpc225CE33B
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: AwsStack/kth-vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: AwsStack/kth-vpc/PublicSubnet2/Subnet
  kthvpcPublicSubnet2RouteTableD32675C7:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: kthvpc225CE33B
      Tags:
        - Key: Name
          Value: AwsStack/kth-vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: AwsStack/kth-vpc/PublicSubnet2/RouteTable
  kthvpcPublicSubnet2RouteTableAssociation33C2E826:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: kthvpcPublicSubnet2RouteTableD32675C7
      SubnetId:
        Ref: kthvpcPublicSubnet2Subnet53A3C282
    Metadata:
      aws:cdk:path: AwsStack/kth-vpc/PublicSubnet2/RouteTableAssociation
  kthvpcPublicSubnet2DefaultRoute4C0270EF:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: kthvpcPublicSubnet2RouteTableD32675C7
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: kthvpcIGW6AC1392C
    DependsOn:
      - kthvpcVPCGWECD83EE3
    Metadata:
      aws:cdk:path: AwsStack/kth-vpc/PublicSubnet2/DefaultRoute
  kthvpcPrivateSubnet1Subnet3D03AF61:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: kthvpc225CE33B
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: AwsStack/kth-vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: AwsStack/kth-vpc/PrivateSubnet1/Subnet
  kthvpcPrivateSubnet1RouteTable105936C0:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: kthvpc225CE33B
      Tags:
        - Key: Name
          Value: AwsStack/kth-vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: AwsStack/kth-vpc/PrivateSubnet1/RouteTable
  kthvpcPrivateSubnet1RouteTableAssociationA70727E1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: kthvpcPrivateSubnet1RouteTable105936C0
      SubnetId:
        Ref: kthvpcPrivateSubnet1Subnet3D03AF61
    Metadata:
      aws:cdk:path: AwsStack/kth-vpc/PrivateSubnet1/RouteTableAssociation
  kthvpcPrivateSubnet1DefaultRouteB7E57466:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: kthvpcPrivateSubnet1RouteTable105936C0
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: kthvpcPublicSubnet1NATGatewayD432435C
    Metadata:
      aws:cdk:path: AwsStack/kth-vpc/PrivateSubnet1/DefaultRoute
  kthvpcPrivateSubnet2SubnetA6FD67C4:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: kthvpc225CE33B
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: AwsStack/kth-vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: AwsStack/kth-vpc/PrivateSubnet2/Subnet
  kthvpcPrivateSubnet2RouteTableFA46960C:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: kthvpc225CE33B
      Tags:
        - Key: Name
          Value: AwsStack/kth-vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: AwsStack/kth-vpc/PrivateSubnet2/RouteTable
  kthvpcPrivateSubnet2RouteTableAssociation5AB2D8F6:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: kthvpcPrivateSubnet2RouteTableFA46960C
      SubnetId:
        Ref: kthvpcPrivateSubnet2SubnetA6FD67C4
    Metadata:
      aws:cdk:path: AwsStack/kth-vpc/PrivateSubnet2/RouteTableAssociation
  kthvpcPrivateSubnet2DefaultRouteFC8A4A3B:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: kthvpcPrivateSubnet2RouteTableFA46960C
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: kthvpcPublicSubnet1NATGatewayD432435C
    Metadata:
      aws:cdk:path: AwsStack/kth-vpc/PrivateSubnet2/DefaultRoute
  kthvpcIGW6AC1392C:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: AwsStack/kth-vpc
    Metadata:
      aws:cdk:path: AwsStack/kth-vpc/IGW
  kthvpcVPCGWECD83EE3:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: kthvpc225CE33B
      InternetGatewayId:
        Ref: kthvpcIGW6AC1392C
    Metadata:
      aws:cdk:path: AwsStack/kth-vpc/VPCGW
  dbSetupSecurityGroupF26835D5securitygroup7E2D7F8B:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: AwsStack/dbSetupSecurityGroupF26835D5-security-group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: kthvpc225CE33B
    Metadata:
      aws:cdk:path: AwsStack/dbSetupSecurityGroupF26835D5-security-group/Resource
  teamfourdbSubnetGroup12745321:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for teamfourdb database
      SubnetIds:
        - Ref: kthvpcPrivateSubnet1Subnet3D03AF61
        - Ref: kthvpcPrivateSubnet2SubnetA6FD67C4
    Metadata:
      aws:cdk:path: AwsStack/teamfourdb/SubnetGroup/Default
  teamfourdbSecurityGroupEF56BACB:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for teamfourdb database
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: kthvpc225CE33B
    Metadata:
      aws:cdk:path: AwsStack/teamfourdb/SecurityGroup/Resource
  AwsStackteamfourdbSecret6295F7963fdaad7efa858a3daf9490cf0a702aeb:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description:
        Fn::Join:
          - ""
          - - "Generated by the CDK for stack: "
            - Ref: AWS::StackName
      GenerateSecretString:
        ExcludeCharacters: " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
        GenerateStringKey: password
        PasswordLength: 30
        SecretStringTemplate: '{"username":"syscdk"}'
    Metadata:
      aws:cdk:path: AwsStack/teamfourdb/Secret/Resource
  teamfourdbSecretAttachmentA94020F0:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: AwsStackteamfourdbSecret6295F7963fdaad7efa858a3daf9490cf0a702aeb
      TargetId:
        Ref: teamfourdb6F35AD68
      TargetType: AWS::RDS::DBInstance
    Metadata:
      aws:cdk:path: AwsStack/teamfourdb/Secret/Attachment/Resource
  teamfourdb6F35AD68:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t3.small
      AllocatedStorage: "100"
      CopyTagsToSnapshot: true
      DBSubnetGroupName:
        Ref: teamfourdbSubnetGroup12745321
      EnableIAMDatabaseAuthentication: true
      Engine: postgres
      MasterUsername: syscdk
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: AwsStackteamfourdbSecret6295F7963fdaad7efa858a3daf9490cf0a702aeb
            - :SecretString:password::}}
      PubliclyAccessible: false
      StorageType: gp2
      VPCSecurityGroups:
        - Fn::GetAtt:
            - teamfourdbSecurityGroupEF56BACB
            - GroupId
    UpdateReplacePolicy: Snapshot
    DeletionPolicy: Snapshot
    Metadata:
      aws:cdk:path: AwsStack/teamfourdb/Resource
  dbSetupServiceRoleBA25F8A7:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: AwsStack/dbSetup/ServiceRole/Resource
  dbSetupServiceRoleDefaultPolicy8156B78E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: rds-db:connect
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":rds:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":db:"
                  - Ref: teamfourdb6F35AD68
        Version: "2012-10-17"
      PolicyName: dbSetupServiceRoleDefaultPolicy8156B78E
      Roles:
        - Ref: dbSetupServiceRoleBA25F8A7
    Metadata:
      aws:cdk:path: AwsStack/dbSetup/ServiceRole/DefaultPolicy/Resource
  dbSetupSecurityGroupF26835D5:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatic security group for Lambda Function AwsStackdbSetup4AC9B30D
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: kthvpc225CE33B
    Metadata:
      aws:cdk:path: AwsStack/dbSetup/SecurityGroup/Resource
  dbSetup04A8ECBD:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters2dc83d032f98a04523dd23be75074ffe3a253b90d3f2e7b30aa7d48c14ef0d85S3BucketEF57CF49
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters2dc83d032f98a04523dd23be75074ffe3a253b90d3f2e7b30aa7d48c14ef0d85S3VersionKey44395BBA
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters2dc83d032f98a04523dd23be75074ffe3a253b90d3f2e7b30aa7d48c14ef0d85S3VersionKey44395BBA
      Role:
        Fn::GetAtt:
          - dbSetupServiceRoleBA25F8A7
          - Arn
      Environment:
        Variables:
          DATABASE_HOST:
            Fn::GetAtt:
              - teamfourdb6F35AD68
              - Endpoint.Address
          DATABASE_PORT:
            Fn::GetAtt:
              - teamfourdb6F35AD68
              - Endpoint.Port
          DATABASE_NAME:
            Ref: teamfourdb6F35AD68
          DATABASE_PASSWORD: not a password
      Handler: index.handler
      Runtime: nodejs14.x
      Timeout: 5
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - dbSetupSecurityGroupF26835D5
              - GroupId
        SubnetIds:
          - Ref: kthvpcPrivateSubnet1Subnet3D03AF61
          - Ref: kthvpcPrivateSubnet2SubnetA6FD67C4
    DependsOn:
      - dbSetupServiceRoleDefaultPolicy8156B78E
      - dbSetupServiceRoleBA25F8A7
    Metadata:
      aws:cdk:path: AwsStack/dbSetup/Resource
      aws:asset:path: asset.2dc83d032f98a04523dd23be75074ffe3a253b90d3f2e7b30aa7d48c14ef0d85
      aws:asset:property: Code
  ManageServicesServiceRoleFC0A8D56:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: AwsStack/ManageServices/ServiceRole/Resource
  ManageServicesServiceRoleDefaultPolicy6201D537:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: rds-db:connect
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":rds:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":db:"
                  - Ref: teamfourdb6F35AD68
        Version: "2012-10-17"
      PolicyName: ManageServicesServiceRoleDefaultPolicy6201D537
      Roles:
        - Ref: ManageServicesServiceRoleFC0A8D56
    Metadata:
      aws:cdk:path: AwsStack/ManageServices/ServiceRole/DefaultPolicy/Resource
  ManageServicesSecurityGroup73D0D868:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatic security group for Lambda Function AwsStackManageServices54CB13F2
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: kthvpc225CE33B
    Metadata:
      aws:cdk:path: AwsStack/ManageServices/SecurityGroup/Resource
  ManageServices92CDACDF:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters2353481f7e5d2d5354862ea627ba6b9b7a65ab4217c5afde0151f9967e029c50S3Bucket396CEB42
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters2353481f7e5d2d5354862ea627ba6b9b7a65ab4217c5afde0151f9967e029c50S3VersionKeyC0690DDF
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters2353481f7e5d2d5354862ea627ba6b9b7a65ab4217c5afde0151f9967e029c50S3VersionKeyC0690DDF
      Role:
        Fn::GetAtt:
          - ManageServicesServiceRoleFC0A8D56
          - Arn
      Environment:
        Variables:
          DATABASE_HOST:
            Fn::GetAtt:
              - teamfourdb6F35AD68
              - Endpoint.Address
          DATABASE_PORT:
            Fn::GetAtt:
              - teamfourdb6F35AD68
              - Endpoint.Port
          DATABASE_NAME:
            Ref: teamfourdb6F35AD68
          DATABASE_PASSWORD: not a password
      Handler: index.handler
      Runtime: nodejs14.x
      Timeout: 5
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - ManageServicesSecurityGroup73D0D868
              - GroupId
        SubnetIds:
          - Ref: kthvpcPrivateSubnet1Subnet3D03AF61
          - Ref: kthvpcPrivateSubnet2SubnetA6FD67C4
    DependsOn:
      - ManageServicesServiceRoleDefaultPolicy6201D537
      - ManageServicesServiceRoleFC0A8D56
    Metadata:
      aws:cdk:path: AwsStack/ManageServices/Resource
      aws:asset:path: asset.2353481f7e5d2d5354862ea627ba6b9b7a65ab4217c5afde0151f9967e029c50
      aws:asset:property: Code
  kthapiED403846:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: kth-api
    Metadata:
      aws:cdk:path: AwsStack/kth-api/Resource
  kthapiCloudWatchRole42932BC8:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: AwsStack/kth-api/CloudWatchRole/Resource
  kthapiAccountA43D255E:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - kthapiCloudWatchRole42932BC8
          - Arn
    DependsOn:
      - kthapiED403846
    Metadata:
      aws:cdk:path: AwsStack/kth-api/Account
  kthapiDeploymentE582FB92d9a8de0c46e16d55c6535be7c1ec30ac:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: kthapiED403846
      Description: Automatically created by the RestApi construct
    DependsOn:
      - kthapidbSetupGET814D158A
      - kthapidbSetup9A5F1F77
      - kthapiservicesserviceidGET975CC6ED
      - kthapiservicesserviceid6B99368E
      - kthapiservicesGETFB21C975
      - kthapiservicesPOST6B8474C5
      - kthapiservicesBB3847A8
    Metadata:
      aws:cdk:path: AwsStack/kth-api/Deployment/Resource
  kthapiDeploymentStageprod69566757:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: kthapiED403846
      DeploymentId:
        Ref: kthapiDeploymentE582FB92d9a8de0c46e16d55c6535be7c1ec30ac
      StageName: prod
    Metadata:
      aws:cdk:path: AwsStack/kth-api/DeploymentStage.prod/Resource
  kthapidbSetup9A5F1F77:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - kthapiED403846
          - RootResourceId
      PathPart: dbSetup
      RestApiId:
        Ref: kthapiED403846
    Metadata:
      aws:cdk:path: AwsStack/kth-api/Default/dbSetup/Resource
  kthapidbSetupGETApiPermissionAwsStackkthapi877D73D1GETdbSetupFBEF420E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - dbSetup04A8ECBD
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: kthapiED403846
            - /
            - Ref: kthapiDeploymentStageprod69566757
            - /GET/dbSetup
    Metadata:
      aws:cdk:path: AwsStack/kth-api/Default/dbSetup/GET/ApiPermission.AwsStackkthapi877D73D1.GET..dbSetup
  kthapidbSetupGETApiPermissionTestAwsStackkthapi877D73D1GETdbSetup97031020:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - dbSetup04A8ECBD
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: kthapiED403846
            - /test-invoke-stage/GET/dbSetup
    Metadata:
      aws:cdk:path: AwsStack/kth-api/Default/dbSetup/GET/ApiPermission.Test.AwsStackkthapi877D73D1.GET..dbSetup
  kthapidbSetupGET814D158A:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: kthapidbSetup9A5F1F77
      RestApiId:
        Ref: kthapiED403846
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - dbSetup04A8ECBD
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: AwsStack/kth-api/Default/dbSetup/GET/Resource
  kthapiservicesBB3847A8:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - kthapiED403846
          - RootResourceId
      PathPart: services
      RestApiId:
        Ref: kthapiED403846
    Metadata:
      aws:cdk:path: AwsStack/kth-api/Default/services/Resource
  kthapiservicesGETApiPermissionAwsStackkthapi877D73D1GETservices3BA76F8D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ManageServices92CDACDF
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: kthapiED403846
            - /
            - Ref: kthapiDeploymentStageprod69566757
            - /GET/services
    Metadata:
      aws:cdk:path: AwsStack/kth-api/Default/services/GET/ApiPermission.AwsStackkthapi877D73D1.GET..services
  kthapiservicesGETApiPermissionTestAwsStackkthapi877D73D1GETservicesA74205A2:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ManageServices92CDACDF
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: kthapiED403846
            - /test-invoke-stage/GET/services
    Metadata:
      aws:cdk:path: AwsStack/kth-api/Default/services/GET/ApiPermission.Test.AwsStackkthapi877D73D1.GET..services
  kthapiservicesGETFB21C975:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: kthapiservicesBB3847A8
      RestApiId:
        Ref: kthapiED403846
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - ManageServices92CDACDF
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: AwsStack/kth-api/Default/services/GET/Resource
  kthapiservicesPOSTApiPermissionAwsStackkthapi877D73D1POSTservices422ABDFA:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ManageServices92CDACDF
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: kthapiED403846
            - /
            - Ref: kthapiDeploymentStageprod69566757
            - /POST/services
    Metadata:
      aws:cdk:path: AwsStack/kth-api/Default/services/POST/ApiPermission.AwsStackkthapi877D73D1.POST..services
  kthapiservicesPOSTApiPermissionTestAwsStackkthapi877D73D1POSTservices22B1B1F5:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ManageServices92CDACDF
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: kthapiED403846
            - /test-invoke-stage/POST/services
    Metadata:
      aws:cdk:path: AwsStack/kth-api/Default/services/POST/ApiPermission.Test.AwsStackkthapi877D73D1.POST..services
  kthapiservicesPOST6B8474C5:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: kthapiservicesBB3847A8
      RestApiId:
        Ref: kthapiED403846
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - ManageServices92CDACDF
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: AwsStack/kth-api/Default/services/POST/Resource
  kthapiservicesserviceid6B99368E:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: kthapiservicesBB3847A8
      PathPart: "{service_id}"
      RestApiId:
        Ref: kthapiED403846
    Metadata:
      aws:cdk:path: AwsStack/kth-api/Default/services/{service_id}/Resource
  kthapiservicesserviceidGETApiPermissionAwsStackkthapi877D73D1GETservicesserviceid1D89E73F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ManageServices92CDACDF
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: kthapiED403846
            - /
            - Ref: kthapiDeploymentStageprod69566757
            - /GET/services/*
    Metadata:
      aws:cdk:path: AwsStack/kth-api/Default/services/{service_id}/GET/ApiPermission.AwsStackkthapi877D73D1.GET..services.{service_id}
  kthapiservicesserviceidGETApiPermissionTestAwsStackkthapi877D73D1GETservicesserviceidA12569DF:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ManageServices92CDACDF
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: kthapiED403846
            - /test-invoke-stage/GET/services/*
    Metadata:
      aws:cdk:path: AwsStack/kth-api/Default/services/{service_id}/GET/ApiPermission.Test.AwsStackkthapi877D73D1.GET..services.{service_id}
  kthapiservicesserviceidGET975CC6ED:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: kthapiservicesserviceid6B99368E
      RestApiId:
        Ref: kthapiED403846
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - ManageServices92CDACDF
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: AwsStack/kth-api/Default/services/{service_id}/GET/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAAA11STU/DMAz9LdyzsMGJG/uAaQeg2hB3NzVd2JpUiQOaqv53nIR2FSc/v/jjxfZCLuZ3cn7zCD9+pqrTbaesQ9kdCNRJ7NHb4BSKpfdIzNXa1GJtjScXFIn1pynAQYOELjpvgdqQ6DGTMcdXmrQ1vYhdOlR3svtoVXz7KNaiCOVZq0MoDabcK9rbQPgO5Rmv/JVjUVZpiJXH4AiedkU0r0BbIPyBiyic/mZ4LbwzrJjxEJCV/HlL4s8fGzQkDqiC03TZOhvapGFK9MJVXnYbICjB447HAob/nPuMOZvVlBiiuZLLYjarIbMXPrG+AQM1OtnlljEwm3dwNdJE4Rjw/6UXZ2jKCmT3HIwahjTFBbpGe58Wo6GR3d7mQSdbWF5KmkxGrO1+BvEOvEznIKDVdZ4Yp6KnZav/Vj/ApVI2sMgNtmd7GfROvHhSebcJDFez4vmI6QmN+AXpaKtIZdT3vTC2Qvnlb78Xc7l44GP+8lrPHDfWDcp9tr+5pOXW6QIAAA==
    Metadata:
      aws:cdk:path: AwsStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  AssetParameters2dc83d032f98a04523dd23be75074ffe3a253b90d3f2e7b30aa7d48c14ef0d85S3BucketEF57CF49:
    Type: String
    Description: S3 bucket for asset "2dc83d032f98a04523dd23be75074ffe3a253b90d3f2e7b30aa7d48c14ef0d85"
  AssetParameters2dc83d032f98a04523dd23be75074ffe3a253b90d3f2e7b30aa7d48c14ef0d85S3VersionKey44395BBA:
    Type: String
    Description: S3 key for asset version "2dc83d032f98a04523dd23be75074ffe3a253b90d3f2e7b30aa7d48c14ef0d85"
  AssetParameters2dc83d032f98a04523dd23be75074ffe3a253b90d3f2e7b30aa7d48c14ef0d85ArtifactHashC6D54778:
    Type: String
    Description: Artifact hash for asset "2dc83d032f98a04523dd23be75074ffe3a253b90d3f2e7b30aa7d48c14ef0d85"
  AssetParameters2353481f7e5d2d5354862ea627ba6b9b7a65ab4217c5afde0151f9967e029c50S3Bucket396CEB42:
    Type: String
    Description: S3 bucket for asset "2353481f7e5d2d5354862ea627ba6b9b7a65ab4217c5afde0151f9967e029c50"
  AssetParameters2353481f7e5d2d5354862ea627ba6b9b7a65ab4217c5afde0151f9967e029c50S3VersionKeyC0690DDF:
    Type: String
    Description: S3 key for asset version "2353481f7e5d2d5354862ea627ba6b9b7a65ab4217c5afde0151f9967e029c50"
  AssetParameters2353481f7e5d2d5354862ea627ba6b9b7a65ab4217c5afde0151f9967e029c50ArtifactHashF3585D73:
    Type: String
    Description: Artifact hash for asset "2353481f7e5d2d5354862ea627ba6b9b7a65ab4217c5afde0151f9967e029c50"
Outputs:
  kthapiEndpoint90C99356:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: kthapiED403846
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: kthapiDeploymentStageprod69566757
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

